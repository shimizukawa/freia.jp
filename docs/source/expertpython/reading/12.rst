===================
エキPy読書会 12
===================

:日時: 2011/6/7 19:00 - 22:00
:範囲: 第9章(p247～): ライフサイクルの管理

エキスパートPythonプログラミングの読書会12回目。

開発モデルやBTSについて.

読書会中に使用したTracの環境構築手順(buildout編)
==================================================

.. code-block:: bash

    $ python bootstrap.py -d init
    $ vi buildout.cfg

buildout.cfg の編集

.. code-block:: init

    [buildout]
    parts = trac

    [trac]
    recipe = zc.recipe.egg
    eggs = trac

環境構築

.. code-block:: bash

    $ bin/buildout
    $ bin/trac-admin epp initenv
    $ bin/trac-admin epp
    Trac [epp]> permission list
    ...
    Trac [epp]> permission add anonymous TRAC_ADMIN
    Trac [epp]> [Ctrl+D]

    $ bin/tracd

.. warning::

    誰でも(anonymousでも)管理権限まで使えるように設定し、80番ポートで起動。
    これはデモ用に行った内容なので、実際の運用に際しては書籍を参考に
    適切な設定を行うこと。

ブラウザで http://localhost/epp/ にアクセス



質疑応答（覚えてる範囲）
========================

* Q: チケットのサイズはどれくらいが適切?

* Q: 粒度がチケット1種類のものよりチケットとサブチケットという2種類の粒度の構成の方が良い?

* Q: チケットを上げる人の範囲はどう設定する? 開発者、評価者、営業 (←ユーザのとこで発生) あたり?

* Q: 開発が進んでいくにつれ発生する大量のチケットの中に、重要なチケットを埋没させないためには?

* Q: チケットレビューってみんな何をしているの?

* Q: チケットの分類ってどうしているの?

* Q: チケットと案件やドキュメントなどの紐付けをする場合があると思うが、どんなふうに運用しているの?

* Q: イタリアでよく使われている開発モデルや BTS に興味があります。

* Q: trac 使いなので redmine とか他ののいいところ教えてくだしあ


参考
======

* ATND: http://atnd.org/events/16163
* Togetter: http://togetter.com/li/145691

