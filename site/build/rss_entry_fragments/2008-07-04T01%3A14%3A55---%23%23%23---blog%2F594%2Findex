(dp0
S'pubdate'
p1
cdatetime
datetime
p2
(S'\x07\xd8\x07\x04\x01\x0e7\x00\x00\x00'
p3
tp4
Rp5
sS'link'
p6
Vhttp://www.freia.jp/taka/blog/594/index.html
p7
sS'description'
p8
V<div id=c-templatebrewshared-ptr class=section>\u000a<h1>2008/07/04 C++\u306etemplate\u3067BREW\u7528\u306bshared_ptr\u3092\u66f8\u3044\u3066\u307f\u305f\uff08\u6539\uff09<a class=headerlink href=http://www.freia.jp/taka/blog/594/index.html#c-templatebrewshared-ptr title=\u3053\u306e\u30d8\u30c3\u30c9\u30e9\u30a4\u30f3\u3078\u306e\u30d1\u30fc\u30de\u30ea\u30f3\u30af>¶</a></h1>\u000a<p><em>Category: 'cpp'</em></p>\u000a<p><a class="reference external" href=http://www.freia.jp/taka/blog/589>Python\u6e29\u6cc93, 2\u65e5\u76ee\u6df1\u591c, shared_ptr\u5927\u4f1a</a> \u3092\u7d4c\u3066\u3001\u3044\u304f\u3064\u304b\u306e\u30d0\u30b0\u304c\u898b\u3064\u304b\u3063\u305f\u306e\u3067\u3001BREW\u7528\u306b\u4f5c\u3063\u305fshared_ptr\u3092\u4fee\u6b63\u3057\u3066\u307f\u308b\u3002\u4fee\u6b63\u306b\u3042\u305f\u308a\u3001\u3068\u3084\u307e\u306b\u610f\u898b\u3092\u3082\u3089\u3063\u305f\u308a\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3002\u5b9f\u969b\u554f\u984c\u3001C++\u73fe\u5f79\u304b\u3089\u96e2\u308c\u3066\u4e45\u3057\u3044\u306e\u3067\u304d\u3063\u3068\u307e\u3060\u30d0\u30b0\u304c\u3042\u308b\u306b\u9055\u3044\u306a\u3044...\u3002\u3067\u3082\u6652\u3057\u3066\u304a\u3053\u3046\u3002</p>\u000a<p>\u4ee5\u4e0b\u306e\u70b9\u306b\u6ce8\u610f\u3002</p>\u000a<ul class=simple>\u000a<li>\u7c21\u5358\u306a\u30c6\u30b9\u30c8\u3057\u304b\u3057\u3066\u307e\u305b\u3093\u3002\u6d41\u7528\u306f\u81ea\u5df1\u8cac\u4efb\u3067\u3002\u3002</li>\u000a<li>\u7d50\u5c40BREW\u7528\u306b\u66f8\u3044\u305f\u3082\u306e\u306e\u63a1\u7528\u3057\u307e\u305b\u3093\u3067\u3057\u305f\uff08\u958b\u767a\u5f8c\u671f\u3060\u3063\u305f\u305f\u3081\uff09</li>\u000a<li>\u30ab\u30a6\u30f3\u30bf\u306fLinkList\u3067\u4f5c\u3063\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u308f\u308c\u308b</li>\u000a<li>\u5927\u672c\u306e\u30b3\u30fc\u30c9\u306fboost\u306eshared_ptr\u3067\u3059</li>\u000a<li><a class="reference external" href=http://www.freia.jp/taka/blog/536/edit>\u524d\u4f5c</a> \u304b\u3089\u3001shared_ptr\u540c\u58eb\u306e\u4ee3\u5165\u3068\u3001\u81ea\u5df1\u4ee3\u5165\u306e\u30d0\u30b0\u3092\u4fee\u6b63</li>\u000a</ul>\u000a<p>\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u30b3\u30fc\u30c9\u3002</p>\u000a<div class=highlight-cpp><div class=highlight><pre><span class=cp>#ifndef __BREW_SHARED_PTR_H__</span>\u000a<span class=cp>#define __BREW_SHARED_PTR_H__</span>\u000a<span class=cp>#include ".\u005coperators.h"</span>\u000a\u000a<span class=k>class</span> <span class=nc>shared_counter</span> <span class=p>{</span>\u000a<span class=nl>private:</span>\u000a    <span class=kt>int</span> <span class=n>count</span><span class=p>;</span>\u000a<span class=nl>public:</span>\u000a    <span class=n>shared_counter</span><span class=p>()</span><span class=o>:</span><span class=n>count</span><span class=p>(</span><span class=mi>1</span><span class=p>){}</span>\u000a    <span class=o>~</span><span class=n>shared_counter</span><span class=p>(){}</span>\u000a\u000a    <span class=kt>int</span> <span class=n>inc</span><span class=p>()</span> <span class=p>{</span><span class=k>return</span> <span class=o>++</span><span class=n>count</span><span class=p>;}</span>\u000a    <span class=kt>int</span> <span class=n>dec</span><span class=p>()</span> <span class=p>{</span><span class=k>return</span> <span class=o>--</span><span class=n>count</span><span class=p>;}</span>\u000a<span class=p>};</span>\u000a\u000a<span class=k>template</span><span class=o>&lt;</span><span class=k>class</span> <span class=nc>T</span><span class=o>&gt;</span>\u000a<span class=k>class</span> <span class=nc>shared_ptr</span> <span class=p>{</span>\u000a<span class=nl>private:</span>\u000a    <span class=n>T</span><span class=o>*</span> <span class=n>px</span><span class=p>;</span>\u000a    <span class=n>shared_counter</span><span class=o>*</span> <span class=n>pn</span><span class=p>;</span>\u000a\u000a<span class=nl>public:</span>\u000a    <span class=n>shared_ptr</span><span class=p>()</span>\u000a            <span class=o>:</span><span class=n>px</span><span class=p>(</span><span class=mi>0</span><span class=p>),</span><span class=n>pn</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span>\u000a    <span class=p>{}</span>\u000a\u000a    <span class=k>template</span><span class=o>&lt;</span><span class=k>class</span> <span class=nc>Y</span><span class=o>&gt;</span>\u000a    <span class=n>shared_ptr</span><span class=p>(</span><span class=n>Y</span><span class=o>*</span> <span class=n>p</span><span class=p>)</span>\u000a            <span class=o>:</span><span class=n>px</span><span class=p>(</span><span class=n>p</span><span class=p>),</span><span class=n>pn</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span>\u000a    <span class=p>{</span>\u000a            <span class=n>pn</span> <span class=o>=</span> <span class=k>new</span> <span class=n>shared_counter</span><span class=p>()</span>\u000a    <span class=p>}</span>\u000a\u000a    <span class=k>template</span><span class=o>&lt;</span><span class=k>class</span> <span class=nc>Y</span><span class=o>&gt;</span>\u000a    <span class=n>shared_ptr</span><span class=p>(</span><span class=n>shared_ptr</span><span class=o>&lt;</span><span class=n>Y</span><span class=o>&gt;</span> <span class=n>r</span><span class=p>)</span>\u000a            <span class=o>:</span><span class=n>px</span><span class=p>(</span><span class=n>r</span><span class=p>.</span><span class=n>px</span><span class=p>),</span><span class=n>pn</span><span class=p>(</span><span class=n>r</span><span class=p>.</span><span class=n>pn</span><span class=p>)</span>\u000a    <span class=p>{</span>\u000a            <span class=n>pn</span><span class=o>-&gt;</span><span class=n>inc</span><span class=p>();</span>\u000a    <span class=p>}</span>\u000a\u000a    <span class=o>~</span><span class=n>shared_ptr</span><span class=p>()</span>\u000a    <span class=p>{</span>\u000a            <span class=k>if</span><span class=p>(</span><span class=n>pn</span> <span class=o>&amp;&amp;</span> <span class=n>pn</span><span class=o>-&gt;</span><span class=n>dec</span><span class=p>()</span><span class=o>==</span><span class=mi>0</span><span class=p>)</span>\u000a            <span class=p>{</span>\u000a                    <span class=k>delete</span> <span class=n>pn</span><span class=p>;</span>\u000a                    <span class=k>delete</span> <span class=n>px</span><span class=p>;</span>\u000a            <span class=p>}</span>\u000a    <span class=p>}</span>\u000a\u000a    <span class=n>shared_ptr</span> <span class=o>&amp;</span> <span class=k>operator</span><span class=o>=</span><span class=p>(</span><span class=n>shared_ptr</span> <span class=k>const</span> <span class=o>&amp;</span> <span class=n>r</span><span class=p>)</span>\u000a    <span class=p>{</span>\u000a        <span class=k>if</span><span class=p>(</span><span class=o>*</span><span class=k>this</span> <span class=o>==</span> <span class=n>r</span><span class=p>)</span> <span class=k>return</span> <span class=o>*</span><span class=k>this</span><span class=p>;</span>\u000a        <span class=k>if</span><span class=p>(</span><span class=n>pn</span> <span class=o>&amp;&amp;</span> <span class=n>pn</span><span class=o>-&gt;</span><span class=n>dec</span><span class=p>()</span><span class=o>==</span><span class=mi>0</span><span class=p>)</span>\u000a        <span class=p>{</span>\u000a                <span class=k>delete</span> <span class=n>pn</span><span class=p>;</span>\u000a                <span class=k>delete</span> <span class=n>px</span><span class=p>;</span>\u000a        <span class=p>}</span>\u000a        <span class=n>px</span> <span class=o>=</span> <span class=n>r</span><span class=p>.</span><span class=n>px</span><span class=p>;</span>\u000a        <span class=n>pn</span> <span class=o>=</span> <span class=n>r</span><span class=p>.</span><span class=n>pn</span><span class=p>;</span>\u000a        <span class=n>pn</span><span class=o>-&gt;</span><span class=n>inc</span><span class=p>();</span>\u000a        <span class=k>return</span> <span class=o>*</span><span class=k>this</span><span class=p>;</span>\u000a    <span class=p>}</span>\u000a\u000a    <span class=k>template</span><span class=o>&lt;</span><span class=k>class</span> <span class=nc>Y</span><span class=o>&gt;</span>\u000a    <span class=n>shared_ptr</span> <span class=o>&amp;</span> <span class=k>operator</span><span class=o>=</span><span class=p>(</span><span class=n>shared_ptr</span><span class=o>&lt;</span><span class=n>Y</span><span class=o>&gt;</span> <span class=k>const</span> <span class=o>&amp;</span> <span class=n>r</span><span class=p>)</span>\u000a    <span class=p>{</span>\u000a        <span class=k>if</span><span class=p>(</span><span class=o>*</span><span class=k>this</span> <span class=o>==</span> <span class=n>r</span><span class=p>)</span> <span class=k>return</span> <span class=o>*</span><span class=k>this</span><span class=p>;</span>\u000a        <span class=k>if</span><span class=p>(</span><span class=n>pn</span> <span class=o>&amp;&amp;</span> <span class=n>pn</span><span class=o>-&gt;</span><span class=n>dec</span><span class=p>()</span><span class=o>==</span><span class=mi>0</span><span class=p>)</span>\u000a        <span class=p>{</span>\u000a            <span class=k>delete</span> <span class=n>pn</span><span class=p>;</span>\u000a            <span class=k>delete</span> <span class=n>px</span><span class=p>;</span>\u000a        <span class=p>}</span>\u000a        <span class=n>px</span> <span class=o>=</span> <span class=n>r</span><span class=p>.</span><span class=n>px</span><span class=p>;</span>\u000a        <span class=n>pn</span> <span class=o>=</span> <span class=n>r</span><span class=p>.</span><span class=n>pn</span><span class=p>;</span>\u000a        <span class=n>pn</span><span class=o>-&gt;</span><span class=n>inc</span><span class=p>();</span>\u000a        <span class=k>return</span> <span class=o>*</span><span class=k>this</span><span class=p>;</span>\u000a    <span class=p>}</span>\u000a\u000a    <span class=k>template</span><span class=o>&lt;</span><span class=k>class</span> <span class=nc>Y</span><span class=o>&gt;</span>\u000a    <span class=n>shared_ptr</span><span class=o>&amp;</span> <span class=k>operator</span><span class=o>=</span><span class=p>(</span><span class=n>Y</span><span class=o>*</span> <span class=k>const</span> <span class=n>p</span><span class=p>)</span>\u000a    <span class=p>{</span>\u000a        <span class=k>if</span><span class=p>(</span><span class=n>px</span> <span class=o>==</span> <span class=n>p</span><span class=p>)</span> <span class=k>return</span> <span class=o>*</span><span class=k>this</span><span class=p>;</span>\u000a        <span class=k>if</span><span class=p>(</span><span class=n>pn</span> <span class=o>&amp;&amp;</span> <span class=n>pn</span><span class=o>-&gt;</span><span class=n>dec</span><span class=p>()</span><span class=o>==</span><span class=mi>0</span><span class=p>)</span>\u000a        <span class=p>{</span>\u000a            <span class=k>delete</span> <span class=n>pn</span><span class=p>;</span>\u000a            <span class=k>delete</span> <span class=n>px</span><span class=p>;</span>\u000a        <span class=p>}</span>\u000a        <span class=n>px</span> <span class=o>=</span> <span class=n>p</span><span class=p>;</span>\u000a        <span class=n>pn</span> <span class=o>=</span> <span class=k>new</span> <span class=n>shared_counter</span><span class=p>();</span>\u000a        <span class=k>return</span> <span class=o>*</span><span class=k>this</span><span class=p>;</span>\u000a    <span class=p>}</span>\u000a\u000a    <span class=n>T</span><span class=o>&amp;</span> <span class=k>operator</span><span class=o>*</span><span class=p>()</span> <span class=k>const</span>\u000a    <span class=p>{</span>\u000a            <span class=k>return</span> <span class=o>*</span><span class=n>px</span><span class=p>;</span>\u000a    <span class=p>}</span>\u000a\u000a    <span class=n>T</span><span class=o>*</span> <span class=k>operator</span><span class=o>-&gt;</span><span class=p>()</span> <span class=k>const</span>\u000a    <span class=p>{</span>\u000a            <span class=k>return</span> <span class=n>px</span><span class=p>;</span>\u000a    <span class=p>}</span>\u000a\u000a    <span class=k>operator</span> <span class=n>T</span><span class=o>*</span><span class=p>()</span> <span class=k>const</span>\u000a    <span class=p>{</span>\u000a            <span class=k>return</span> <span class=n>px</span><span class=p>;</span>\u000a    <span class=p>}</span>\u000a<span class=p>};</span>\u000a\u000a\u000a<span class=cp>#endif </span><span class=c1>// __BREW_SHARED_PTR_H__</span>\u000a</pre></div>\u000a</div>\u000a</div>\u000a
p9
sS'unique_id'
p10
g7
sS'title'
p11
V2008/07/04 C++\u306etemplate\u3067BREW\u7528\u306bshared_ptr\u3092\u66f8\u3044\u3066\u307f\u305f\uff08\u6539\uff09
p12
s.