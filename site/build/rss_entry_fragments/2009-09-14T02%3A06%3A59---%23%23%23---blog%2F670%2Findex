(dp0
S'pubdate'
p1
cdatetime
datetime
p2
(S'\x07\xd9\t\x0e\x02\x06;\x00\x00\x00'
p3
tp4
Rp5
sS'link'
p6
Vhttp://www.freia.jp/taka/blog/670/index.html
p7
sS'description'
p8
V<div id=railsbefore-filterpython class=section>\u000a<h1>2009/09/14 Rails\u306ebefore_filter\u3063\u307d\u3044\u4ed5\u7d44\u307f\u3092Python\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u5b9f\u88c5<a class=headerlink href=http://www.freia.jp/taka/blog/670/index.html#railsbefore-filterpython title=\u3053\u306e\u30d8\u30c3\u30c9\u30e9\u30a4\u30f3\u3078\u306e\u30d1\u30fc\u30de\u30ea\u30f3\u30af>¶</a></h1>\u000a<p><em>Category: 'Zope', 'python'</em></p>\u000a<p>\u4ee5\u524dRails\u3067\u4f5c\u3063\u305f\u67d0\u30a2\u30d7\u30ea\u3092Python\u306b\u79fb\u690d\u4e2d\u3067\u3059\u3002\u51fa\u6765\u308b\u3060\u3051Python\u306e\u6d41\u5100\u306b\u7d44\u307f\u76f4\u3057\u3066\u308b\u3093\u3067\u3059\u304c\u3001Rails\u306ebefore_filter\u3092\u5206\u304b\u308a\u3084\u3059\u304f\u7d44\u307f\u66ff\u3048\u308b\u306e\u304c\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001Python\u3067\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u4ed5\u7d44\u307f\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u3068\u8a00\u3063\u3066\u3082zope.formlib\u306eActions\u304b\u30898\u5272\u304f\u3089\u3044\u30b3\u30fc\u30c9\u3092\u30d1\u30af\u3063\u3066\u304d\u3066\u307e\u3059\u3002</p>\u000a<p>\u76ee\u7684\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u306b\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3059\u308c\u3070\u3001index\u30a2\u30af\u30b7\u30e7\u30f3\u3084create\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u547c\u3070\u308c\u308b\u524d\u306b\uff12\u3064\u306e\u4e8b\u524d\u51e6\u7406\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3002</p>\u000a<p>Ruby\u3060\u3068\u3053\u3046\u3002</p>\u000a<div class=highlight-ruby><div class=highlight><pre><span class=k>class</span> <span class=nc>FooController</span> <span class=o>&lt;</span> <span class=no>ApplicatoinController</span>\u000a  <span class=n>before_filter</span> <span class=ss>:setup1</span><span class=p>,</span> <span class=ss>:setup2</span>\u000a\u000a  <span class=k>def</span> <span class=nf>index</span>\u000a    <span class=n>render</span> <span class=o>.</span><span class=n>.</span><span class=o>.</span>\u000a  <span class=k>end</span>\u000a\u000a  <span class=k>def</span> <span class=nf>create</span>\u000a    <span class=n>user</span> <span class=o>=</span> <span class=no>User</span><span class=o>.</span><span class=n>new</span><span class=p>(</span><span class=n>params</span><span class=o>[</span><span class=ss>:user</span><span class=o>]</span><span class=p>)</span>\u000a    <span class=n>user</span><span class=o>.</span><span class=n>save</span><span class=p>()</span>\u000a    <span class=n>render</span> <span class=o>.</span><span class=n>.</span><span class=o>.</span>\u000a  <span class=k>end</span>\u000a\u000a  <span class=k>def</span> <span class=nf>setup1</span>\u000a    <span class=o>.</span><span class=n>.</span><span class=o>.</span>\u000a  <span class=k>end</span>\u000a\u000a  <span class=k>def</span> <span class=nf>setup2</span>\u000a    <span class=o>.</span><span class=n>.</span><span class=o>.</span>\u000a  <span class=k>end</span>\u000a<span class=k>end</span>\u000a</pre></div>\u000a</div>\u000a<p>Python\u3067\u3053\u3046\u3057\u305f\u3044\u3002</p>\u000a<div class=highlight-python><div class=highlight><pre><span class=k>class</span> <span class=nc>FooController</span><span class=p>(</span><span class=n>ApplicationController</span><span class=p>):</span>\u000a    <span class=k>def</span> <span class=nf>index</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>render</span><span class=p>(</span><span class=o>...</span><span class=p>)</span>\u000a\u000a    <span class=k>def</span> <span class=nf>create</span><span class=p>(</span><span class=bp>self</span><span class=p>)</span>\u000a        <span class=n>user</span> <span class=o>=</span> <span class=n>User</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>user</span><span class=p>))</span>\u000a        <span class=n>user</span><span class=o>.</span><span class=n>put</span><span class=p>()</span>\u000a        <span class=n>render</span> <span class=o>...</span>\u000a    <span class=n>end</span>\u000a\u000a    <span class=nd>@hook</span><span class=p>(</span><span class=s>'before'</span><span class=p>)</span>\u000a    <span class=k>def</span> <span class=nf>setup1</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=o>...</span>\u000a\u000a    <span class=nd>@hook</span><span class=p>(</span><span class=s>'before'</span><span class=p>)</span>\u000a    <span class=k>def</span> <span class=nf>setup2</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=o>...</span>\u000a</pre></div>\u000a</div>\u000a<p>\u3053\u308c\u3067\u3001\u547c\u3073\u51fa\u3057\u305f\u3044\u95a2\u6570\u306bhook\u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u30de\u30fc\u30ad\u30f3\u30b0\u51fa\u6765\u305f\u306e\u3067\u3001\u89aa\u30af\u30e9\u30b9ApplicationController\u306b\u3001@hook('before')\u3067\u767b\u9332\u3057\u305f\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3092\u4ed5\u8fbc\u3081\u3070\u5b8c\u6210\uff01</p>\u000a<p>\u3063\u3066\u3053\u3068\u3067\u3001hook\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b <tt class="docutils literal"><span class=pre>hooks.py</span></tt> \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3002</p>\u000a<div class=highlight-python><div class=highlight><pre><span class=kn>import</span> <span class=nn>sys</span>\u000a\u000a<span class=n>__all__</span> <span class=o>=</span> <span class=p>[</span><span class=s>'hook'</span><span class=p>,</span> <span class=s>'Hooks'</span><span class=p>]</span>\u000a\u000a<span class=k>class</span> <span class=nc>Hook</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>\u000a    <span class=k>def</span> <span class=nf>__init__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>timing</span><span class=p>,</span> <span class=n>func</span><span class=p>):</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>timing</span> <span class=o>=</span> <span class=n>timing</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>func</span> <span class=o>=</span> <span class=n>func</span>\u000a\u000a    <span class=k>def</span> <span class=nf>__call__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>,</span> <span class=o>**</span><span class=n>kw</span><span class=p>):</span>\u000a        <span class=k>return</span> <span class=bp>self</span><span class=o>.</span><span class=n>func</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>inst</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>,</span> <span class=o>**</span><span class=n>kw</span><span class=p>)</span>\u000a\u000a    <span class=k>def</span> <span class=nf>__get__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>inst</span><span class=p>,</span> <span class=n>class_</span><span class=o>=</span><span class=bp>None</span><span class=p>):</span>\u000a        <span class=k>if</span> <span class=n>inst</span> <span class=ow>is</span> <span class=bp>None</span><span class=p>:</span>\u000a            <span class=k>return</span> <span class=bp>self</span>\u000a        <span class=n>result</span> <span class=o>=</span> <span class=bp>self</span><span class=o>.</span><span class=n>__class__</span><span class=o>.</span><span class=n>__new__</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>__class__</span><span class=p>)</span>\u000a        <span class=n>result</span><span class=o>.</span><span class=n>__dict__</span><span class=o>.</span><span class=n>update</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>__dict__</span><span class=p>)</span>\u000a        <span class=n>result</span><span class=o>.</span><span class=n>inst</span> <span class=o>=</span> <span class=n>inst</span>\u000a        <span class=k>return</span> <span class=n>result</span>\u000a\u000a\u000a<span class=k>class</span> <span class=nc>hook</span><span class=p>:</span>\u000a    <span class=k>def</span> <span class=nf>__init__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>timing</span><span class=o>=</span><span class=bp>None</span><span class=p>,</span> <span class=n>hooks</span><span class=o>=</span><span class=bp>None</span><span class=p>):</span>\u000a        <span class=n>caller_locals</span> <span class=o>=</span> <span class=n>sys</span><span class=o>.</span><span class=n>_getframe</span><span class=p>(</span><span class=mi>1</span><span class=p>)</span><span class=o>.</span><span class=n>f_locals</span>\u000a        <span class=k>if</span> <span class=n>hooks</span> <span class=ow>is</span> <span class=bp>None</span><span class=p>:</span>\u000a            <span class=n>hooks</span> <span class=o>=</span> <span class=n>caller_locals</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s>'hooks'</span><span class=p>)</span>\u000a        <span class=k>if</span> <span class=n>hooks</span> <span class=ow>is</span> <span class=bp>None</span><span class=p>:</span>\u000a            <span class=n>hooks</span> <span class=o>=</span> <span class=n>caller_locals</span><span class=p>[</span><span class=s>'hooks'</span><span class=p>]</span> <span class=o>=</span> <span class=n>Hooks</span><span class=p>()</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>hooks</span> <span class=o>=</span> <span class=n>hooks</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>timing</span> <span class=o>=</span> <span class=n>timing</span>\u000a\u000a    <span class=k>def</span> <span class=nf>__call__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>func</span><span class=p>):</span>\u000a        <span class=n>hook</span> <span class=o>=</span> <span class=n>Hook</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>timing</span><span class=p>,</span> <span class=n>func</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>hooks</span><span class=o>.</span><span class=n>append</span><span class=p>(</span><span class=n>hook</span><span class=p>)</span>\u000a        <span class=k>return</span> <span class=n>hook</span>\u000a\u000a\u000a<span class=k>class</span> <span class=nc>Hooks</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>\u000a    <span class=k>def</span> <span class=nf>__init__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=o>*</span><span class=n>hooks</span><span class=p>):</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>_hooks</span> <span class=o>=</span> <span class=n>hooks</span>\u000a\u000a    <span class=k>def</span> <span class=nf>__iter__</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>return</span> <span class=nb>iter</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>_hooks</span><span class=p>)</span>\u000a\u000a    <span class=k>def</span> <span class=nf>__len__</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>return</span> <span class=nb>len</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>_hooks</span><span class=p>)</span>\u000a\u000a    <span class=k>def</span> <span class=nf>append</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>hook</span><span class=p>):</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>_hooks</span> <span class=o>+=</span> <span class=p>(</span><span class=n>hook</span><span class=p>,)</span>\u000a\u000a    <span class=nd>@classmethod</span>\u000a    <span class=k>def</span> <span class=nf>exec_hooks</span><span class=p>(</span><span class=n>klass</span><span class=p>,</span> <span class=n>obj</span><span class=p>,</span> <span class=n>timing</span><span class=o>=</span><span class=bp>None</span><span class=p>):</span>\u000a        <span class=p>[</span><span class=n>x</span><span class=p>()</span> <span class=k>for</span> <span class=n>x</span> <span class=ow>in</span> <span class=n>obj</span><span class=o>.</span><span class=n>hooks</span> <span class=k>if</span> <span class=n>timing</span> <span class=ow>in</span> <span class=p>[</span><span class=bp>None</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>timing</span><span class=p>]]</span>\u000a\u000a    <span class=c># TODO need test</span>\u000a    <span class=k>def</span> <span class=nf>__add__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>other</span><span class=p>):</span>\u000a        <span class=k>return</span> <span class=bp>self</span><span class=o>.</span><span class=n>__class__</span><span class=p>(</span><span class=o>*</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>_hooks</span> <span class=o>+</span> <span class=n>other</span><span class=o>.</span><span class=n>_hooks</span><span class=p>))</span>\u000a\u000a    <span class=k>def</span> <span class=nf>copy</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>return</span> <span class=bp>self</span><span class=o>.</span><span class=n>__class__</span><span class=p>(</span><span class=o>*</span><span class=bp>self</span><span class=o>.</span><span class=n>_hooks</span><span class=p>)</span>\u000a\u000a    <span class=k>def</span> <span class=nf>__get__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>inst</span><span class=p>,</span> <span class=n>class_</span><span class=p>):</span>\u000a        <span class=k>if</span> <span class=n>inst</span> <span class=ow>is</span> <span class=bp>None</span><span class=p>:</span>\u000a            <span class=k>return</span> <span class=bp>self</span>\u000a        <span class=k>return</span> <span class=bp>self</span><span class=o>.</span><span class=n>__class__</span><span class=p>(</span><span class=o>*</span><span class=p>[</span><span class=n>a</span><span class=o>.</span><span class=n>__get__</span><span class=p>(</span><span class=n>inst</span><span class=p>)</span> <span class=k>for</span> <span class=n>a</span> <span class=ow>in</span> <span class=bp>self</span><span class=o>.</span><span class=n>_hooks</span><span class=p>])</span>\u000a</pre></div>\u000a</div>\u000a<p>\u4f7f\u3044\u65b9\u3001\u517c\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3002</p>\u000a<div class=highlight-python><div class=highlight><pre><span class=kn>import</span> <span class=nn>unittest</span>\u000a<span class=kn>from</span> <span class=nn>hooks</span> <span class=kn>import</span> <span class=n>hook</span><span class=p>,</span> <span class=n>Hooks</span>\u000a\u000a<span class=k>class</span> <span class=nc>HooksTest</span><span class=p>(</span><span class=n>unittest</span><span class=o>.</span><span class=n>TestCase</span><span class=p>):</span>\u000a    <span class=k>def</span> <span class=nf>test_register_hook</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>class</span> <span class=nc>Base</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func1</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=k>pass</span>\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Base</span><span class=p>()</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=nb>len</span><span class=p>(</span><span class=n>obj</span><span class=o>.</span><span class=n>hooks</span><span class=p>))</span>\u000a\u000a    <span class=k>def</span> <span class=nf>test_call_func</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>class</span> <span class=nc>Base</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>\u000a            <span class=n>value</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func1</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value</span> <span class=o>=</span> <span class=mi>1</span>\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Base</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value</span><span class=p>)</span>\u000a\u000a    <span class=k>def</span> <span class=nf>test_hooks_does_not_inherit</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>class</span> <span class=nc>Base</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>\u000a            <span class=n>value1</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func1</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value1</span> <span class=o>=</span> <span class=mi>1</span>\u000a        <span class=k>class</span> <span class=nc>Derive</span><span class=p>(</span><span class=n>Base</span><span class=p>):</span>\u000a            <span class=n>value2</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func2</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value2</span> <span class=o>=</span> <span class=mi>2</span>\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Derive</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span> <span class=c># value1 was inherited, but not hooked</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value2</span><span class=p>)</span>\u000a\u000a    <span class=k>def</span> <span class=nf>test_hooks_can_inherit</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>class</span> <span class=nc>Base</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>\u000a            <span class=n>value1</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func1</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value1</span> <span class=o>=</span> <span class=mi>1</span>\u000a        <span class=k>class</span> <span class=nc>Derive</span><span class=p>(</span><span class=n>Base</span><span class=p>):</span>\u000a            <span class=n>hooks</span> <span class=o>=</span> <span class=n>Base</span><span class=o>.</span><span class=n>hooks</span><span class=o>.</span><span class=n>copy</span><span class=p>()</span>\u000a            <span class=n>value2</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func2</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value2</span> <span class=o>=</span> <span class=mi>2</span>\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Derive</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value2</span><span class=p>)</span>\u000a\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Base</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assert_</span><span class=p>(</span><span class=ow>not</span> <span class=nb>hasattr</span><span class=p>(</span><span class=n>obj</span><span class=p>,</span> <span class=s>'value2'</span><span class=p>))</span>\u000a\u000a\u000a    <span class=k>def</span> <span class=nf>test_inherited_brother_hooks_must_not_pollution</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>class</span> <span class=nc>Base</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>\u000a            <span class=n>value1</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func1</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value1</span> <span class=o>=</span> <span class=mi>1</span>\u000a        <span class=k>class</span> <span class=nc>DeriveA</span><span class=p>(</span><span class=n>Base</span><span class=p>):</span>\u000a            <span class=n>value2</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func2</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value2</span> <span class=o>=</span> <span class=mi>2</span>\u000a        <span class=k>class</span> <span class=nc>DeriveB</span><span class=p>(</span><span class=n>Base</span><span class=p>):</span>\u000a            <span class=n>value3</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func3</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value3</span> <span class=o>=</span> <span class=mi>3</span>\u000a\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Base</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assert_</span><span class=p>(</span><span class=ow>not</span> <span class=nb>hasattr</span><span class=p>(</span><span class=n>obj</span><span class=p>,</span> <span class=s>'value2'</span><span class=p>))</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assert_</span><span class=p>(</span><span class=ow>not</span> <span class=nb>hasattr</span><span class=p>(</span><span class=n>obj</span><span class=p>,</span> <span class=s>'value3'</span><span class=p>))</span>\u000a\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>DeriveA</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span> <span class=c># value1 was inherited, but not hooked</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value2</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assert_</span><span class=p>(</span><span class=ow>not</span> <span class=nb>hasattr</span><span class=p>(</span><span class=n>obj</span><span class=p>,</span> <span class=s>'value3'</span><span class=p>))</span>\u000a\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>DeriveB</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span> <span class=c># value1 was inherited, but not hooked</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assert_</span><span class=p>(</span><span class=ow>not</span> <span class=nb>hasattr</span><span class=p>(</span><span class=n>obj</span><span class=p>,</span> <span class=s>'value2'</span><span class=p>))</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value3</span><span class=p>)</span>\u000a\u000a    <span class=k>def</span> <span class=nf>test_inherit_hooks_must_not_pollution</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>class</span> <span class=nc>Base</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>\u000a            <span class=n>value1</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func1</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value1</span> <span class=o>=</span> <span class=mi>1</span>\u000a        <span class=k>class</span> <span class=nc>DeriveA</span><span class=p>(</span><span class=n>Base</span><span class=p>):</span>\u000a            <span class=n>hooks</span> <span class=o>=</span> <span class=n>Base</span><span class=o>.</span><span class=n>hooks</span><span class=o>.</span><span class=n>copy</span><span class=p>()</span>\u000a            <span class=n>value2</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func2</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value2</span> <span class=o>=</span> <span class=mi>2</span>\u000a        <span class=k>class</span> <span class=nc>DeriveB</span><span class=p>(</span><span class=n>Base</span><span class=p>):</span>\u000a            <span class=n>value3</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func3</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value3</span> <span class=o>=</span> <span class=mi>3</span>\u000a\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>DeriveB</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span> <span class=c># value1 was inherited, but not hooked</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value3</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assert_</span><span class=p>(</span><span class=ow>not</span> <span class=nb>hasattr</span><span class=p>(</span><span class=n>obj</span><span class=p>,</span> <span class=s>'value2'</span><span class=p>))</span>\u000a\u000a    <span class=k>def</span> <span class=nf>test_register_named_hooks</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a        <span class=k>class</span> <span class=nc>Base</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>\u000a            <span class=n>value1</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=n>value2</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=n>value3</span> <span class=o>=</span> <span class=mi>0</span>\u000a            <span class=nd>@hook</span><span class=p>()</span>\u000a            <span class=k>def</span> <span class=nf>func1</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value1</span> <span class=o>=</span> <span class=mi>1</span>\u000a            <span class=nd>@hook</span><span class=p>(</span><span class=s>'foo'</span><span class=p>)</span>\u000a            <span class=k>def</span> <span class=nf>func2</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value2</span> <span class=o>=</span> <span class=mi>2</span>\u000a            <span class=nd>@hook</span><span class=p>(</span><span class=s>'bar'</span><span class=p>)</span>\u000a            <span class=k>def</span> <span class=nf>func3</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>\u000a                <span class=bp>self</span><span class=o>.</span><span class=n>value3</span> <span class=o>=</span> <span class=mi>3</span>\u000a\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Base</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value2</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value3</span><span class=p>)</span>\u000a\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Base</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>,</span> <span class=s>'foo'</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value2</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value3</span><span class=p>)</span>\u000a\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Base</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>,</span> <span class=s>'bar'</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value2</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value3</span><span class=p>)</span>\u000a\u000a        <span class=n>obj</span> <span class=o>=</span> <span class=n>Base</span><span class=p>()</span>\u000a        <span class=n>Hooks</span><span class=o>.</span><span class=n>exec_hooks</span><span class=p>(</span><span class=n>obj</span><span class=p>,</span> <span class=s>'baz'</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value1</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value2</span><span class=p>)</span>\u000a        <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>obj</span><span class=o>.</span><span class=n>value3</span><span class=p>)</span>\u000a\u000a\u000a<span class=k>def</span> <span class=nf>test_suite</span><span class=p>():</span>\u000a    <span class=k>return</span> <span class=n>unittest</span><span class=o>.</span><span class=n>TestSuite</span><span class=p>((</span>\u000a        <span class=n>TestSuite</span><span class=p>(</span><span class=n>HooksTest</span><span class=p>),</span>\u000a    <span class=p>))</span>\u000a\u000a<span class=k>if</span> <span class=n>__name__</span> <span class=o>==</span> <span class=s>'__main__'</span><span class=p>:</span>\u000a    <span class=n>unittest</span><span class=o>.</span><span class=n>main</span><span class=p>()</span>\u000a</pre></div>\u000a</div>\u000a<p><tt class="docutils literal"><span class=pre>@hook</span></tt> \u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u4f7f\u3046\u3068\u3001\u4f7f\u3063\u305f\u30af\u30e9\u30b9\u306e\u30af\u30e9\u30b9\u5909\u6570\u306b\u52dd\u624b\u306bhooks\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3042\u3057\u304b\u3089\u305a\u3002</p>\u000a<p>\u4eca\u56de\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001frame\u3068__get__\u306e\u4ed5\u7d44\u307f\u3092\u52c9\u5f37\u3057\u307e\u3057\u305f\u3002\u5148\u4eba\u306e\u30b3\u30fc\u30c9(\u4eca\u56de\u306fzope.formlib)\u306f\u52c9\u5f37\u306b\u306a\u308b\u306d\u3002</p>\u000a</div>\u000a
p9
sS'unique_id'
p10
g7
sS'title'
p11
V2009/09/14 Rails\u306ebefore_filter\u3063\u307d\u3044\u4ed5\u7d44\u307f\u3092Python\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u5b9f\u88c5
p12
s.