:date: 2009-12-17 03:06:47
:categories: ['python']
:body type: text/x-rst

========================================================
2009/12/17 Python Testing: Beginner's Guide の目次の和訳
========================================================

*Category: 'python'*

Daniel Arbuckle 著の Python Testing: Beginner's Guide の目次を和訳しました。と言ってもまだ発売前なので内容はよく分かりません。Twitterでなにやらプッシュされていたので、とりあえず目次等を訳してみました。

発売日は2010年1月ですが、本は以下から予約購入できます。

* PACKT_

なお、PDF版と同時に買うとほとんど本の定価分の金額でPDFが付いてきます。さらにページの中程には、この本のPDF版と、 Expert Python Programming のPDF版を合わせて買うと両方とも半額でGetできるプロモーションコードとかあって、どんだけ安売りするんだよって幹事です。 Expert Python Programming については `Expert Python Programming の目次の和訳`_ もどうぞ。


.. _PACKT: http://www.packtpub.com/python-testing-beginners-guide/book
.. _`Expert Python Programming の目次の和訳`: http://www.freia.jp/taka/blog/680


この本で学べること
===================
* Pythonのdoctestモジュールを使ってテストを簡単に行います。doctestはテストコードをdoc stringsに書くことが出来ます。
* ユニットテストで開発を駆動し、プロセスを速くする方法を学びます。
* Mockerの機能によって、各ユニットの独立を維持するのを助けます。また必要に応じてカスタマイズ出来るようになります。
* Embed your tests in a controlled and temporary environment using test fixtures
* Python Mcoker の MockerTestCasaeを使って簡潔にユニットテストとMockerを統合します
* テストを自動的に見つけて実行してくれる Nose - Noseはユニットテストを基本としたPythonのテストフレームワークで、テストの作成と実施を簡単にしてくれます。
* Webアプリケーション用のテストをTwillを使って書きます。Twill integrate it's capabilities as a library into Python testing code
* 結合テストの作成と実行によって、機能・プログラムが正しく動作していることを確認します。
* ソースコード管理がソースコード内のdoctest変更を検出して、自動的にテストをしてくれる Nose について。
* 継続的常時結合システム Buildbot のセットアップとテストを多数の異なる環境で実行する方法について。


Python テスティング: 初心者向けガイド
===========================================

1章 Python によるテスト駆動開発と様々なテスト手法の紹介
--------------------------------------------------------

2章 doctest ツールとその使い方について
---------------------------------------

3章 ユニットテストとテスト駆動開発のアイディアの紹介、そして doctest のユニットテストへの適用
----------------------------------------------------------------------------------------------

4章 モックオブジェクトとは何か、Pythonにおける Mocker ツールについて
----------------------------------------------------------------------

5章 ユニットテストフレームワークの紹介と doctest との組み合わせについての議論
------------------------------------------------------------------------------

6章 Nose テストランナーの紹介と、プロジェクトについての議論
-------------------------------------------------------------

7章 テスト駆動開発プロセス全体を通して見る
-------------------------------------------

8章 これまでに得た知識のWebアプリケーションへの適用と、Twillツールの紹介
-------------------------------------------------------------------------

9章 ユニットテストをソフトウェアシステム全体のテストへと組み上げる方法
-----------------------------------------------------------------------

10章 コードカバレッジと常時結合の紹介と、バージョン管理システムと連携した自動テストについて
--------------------------------------------------------------------------------------------


アプローチ
============
この本は、自動テストの基礎から始まり、最良のツールと手法について完全に紹介します。新しい概念は段階的に導入していきます。この初心者ガイドによってテストが簡単で、より楽しいものになるでしょう。


この本のターゲット
===================
もしあなたがPython技術者で、アプリケーションのためのテストコードを書きたいと考えているなら、この本で標準的な方法を入手できます。また、この本を読むことによってテスト手法をより簡単に学ぶことが出来ます。

あなたには一般的なPythonプログラミングの知識が必要です。
ソフトウェアテストの認識があること良いですが、テストに関する知識は必須ではありませんし、また、ライブラリに関する知識も必須ではありません。


.. :extend type: text/x-rst
.. :extend:

